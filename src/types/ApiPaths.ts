export const ApiPaths: APIPaths = {
    api: {
        base: { path: "https://api.vrchat.cloud/api/1", method: "" },
    },
    
    auth: {
        userExist: { path: "/auth/exists", method: "GET" },
        getCurrentUserInfo: { path: "/auth/user", method: "GET" },
        verify2FATOTP: { path: "/auth/twofactorauth/totp/verify", method: "POST" },
        verify2FAOTP: { path: "/auth/twofactorauth/otp/verify", method: "POST" },
        verify2FAEmail: { path: "/auth/twofactorauth/emailotp/verify", method: "POST" },
        verifyAuthToken: { path: "/auth", method: "GET" },
        logout: { path: "/logout", method: "PUT" },
        deleteUser: { path: "/users/{userId}/delete", method: "PUT" },
    },
    avi: {
        getOwnAvatars: { path: "/users/{userId}/avatar", method: "GET" },
        searchAvatars: { path: "/avatars", method: "GET" },
        createAvatars: { path: "/avatars", method: "POST" },
        getAvatar: { path: "/avatars/{avatarId}", method: "GET" },
        updateAvatar: { path: "/avatars/{avatarId}", method: "PUT" },
        deleteAvatar: { path: "/avatars/{avatarId}", method: "DEL" },
        selectAvatar: { path: "/avatars/{avatarId}/select", method: "PUT" },
        selectFallbackAvatar: { path: "/avatars/{avatarId}/selectFallback", method: "PUT" },
        listFavoritedAvatars: { path: "/avatars/favorites", method: "GET" },
    },
    economy: {
        listSteamTransactions: { path: "/Steam/transactions", method: "GET" },
        getSteamTransaction: { path: "/Steam/transactions/{transactionId}", method: "GET" },
        getCurrentSubscriptions: { path: "/auth/user/subscription", method: "GET" },
        listSubscriptions: { path: "/subscriptions", method: "GET" },
        getLicenseGroup: { path: "/licenseGroups/{licenseGroupId}", method: "GET" },
    },
    fav: {
        listFavorites: { path: "/favorites", method: "GET" },
        addFavorite: { path: "/favorites", method: "POST" },
        showFavorite: { path: "/favorites/{favoriteId}", method: "GET" },
        removeFavorite: { path: "/favorites/{favoriteId}", method: "DEL" },
        listFavoriteGroups: { path: "/favorite/groups", method: "GET" },
        showFavoriteGroup: { path: "/favorite/group/{favoriteGroupType}/{favoriteGroupName}/{userId}", method: "GET" },
        updateFavoriteGroup: { path: "/favorite/group/{favoriteGroupType}/{favoriteGroupName}/{userId}", method: "PUT" },
        clearFavoriteGroup: { path: "/favorite/group/{favoriteGroupType}/{favoriteGroupName}/{userId}", method: "DEL" },
    },
    files: {
        listFiles: { path: "/files", method: "GET" },
        createFile: { path: "/file", method: "POST" },
        showFile: { path: "/file/{fileId}", method: "GET" },
        createFileVersion: { path: "/file/{fileId}", method: "POST" },
        deleteFile: { path: "/file/{fileId}", method: "DEL" },
        downloadFileVersion: { path: "/file/{fileId}/{versionId}", method: "GET" },
        deleteFileVersion: { path: "/file/{fileId}/{versionId}", method: "DEL" },
        dinishFileDataUpload: { path: "/file/{fileId}/{versionId}/{fileType}/finish", method: "PUT" },
        startFileDataUpload: { path: "/file/{fileId}/{versionId}/{fileType}/start", method: "PUT" },
        checkFileDataUploadStatus: { path: "/file/{fileId}/{versionId}/{fileType}/status", method: "GET" },
    },
    friends: {
        listFriends: { path: "/auth/user/friends", method: "GET" },
        sendFriendRequest: { path: "/user/{userId}/friendRequest", method: "POST" },
        deleteFriendRequest: { path: "/user/{userId}/friendRequest", method: "DEL" },
        checkFriendStatus: { path: "/user/{userId}/friendStatus", method: "GET" },
        unfriend: { path: "/auth/user/friends/{userId}", method: "DEL" },
    },
    groups: {
        createGroup: { path: "/groups", method: "POST" },
        getGroupbyID: { path: "/groups/{groupId}", method: "GET" },
        updateGroup: { path: "/groups/{groupId}", method: "PUT" },
        deleteGroup: { path: "/groups/{groupId}", method: "DEL" },
        getGroupAnnouncement: { path: "/groups/{groupId}/announcement", method: "GET" },
        createGroupAnnouncement: { path: "/groups/{groupId}/announcement", method: "POST" },
        deleteGroupAnnouncement: { path: "/groups/{groupId}/announcement", method: "DEL" },
        getGroupAuditLogs: { path: "/groups/{groupId}/auditLogs", method: "GET" },
        getGroupBans: { path: "/groups/{groupId}/bans", method: "GET" },
        banGroupMember: { path: "/groups/{groupId}/bans", method: "POST" },
        unbanGroupMember: { path: "/groups/{groupId}/bans/{userId}", method: "DEL" },
        createGroupGallery: { path: "/groups/{groupId}/galleries", method: "POST" },
        getGroupGalleryImages: { path: "/groups/{groupId}/galleries/{groupGalleryId}", method: "GET" },
        updateGroupGallery: { path: "/groups/{groupId}/galleries/{groupGalleryId}", method: "PUT" },
        deleteGroupGallery: { path: "/groups/{groupId}/galleries/{groupGalleryId}", method: "DEL" },
        addGroupGalleryImage: { path: "/groups/{groupId}/galleries/{groupGalleryId}/images", method: "POST" },
        deleteGroupGalleryImage: { path: "/groups/{groupId}/galleries/{groupGalleryId}/images/{groupGalleryImageId}", method: "DEL" },
        getGroupInvitesSent: { path: "/groups/{groupId}/invites", method: "GET" },
        inviteUsertoGroup: { path: "/groups/{groupId}/invites", method: "POST" },
        deleteUserInvite: { path: "/groups/{groupId}/invites/{userId}", method: "DEL" },
        joinGroup: { path: "/groups/{groupId}/join", method: "POST" },
        leaveGroup: { path: "/groups/{groupId}/leave", method: "POST" },
        listGroupMembers: { path: "/groups/{groupId}/members", method: "GET" },
        getGroupMember: { path: "/groups/{groupId}/members/{userId}", method: "GET" },
        updateGroupMember: { path: "/groups/{groupId}/members/{userId}", method: "PUT" },
        kickGroupMember: { path: "/groups/{groupId}/members/{userId}", method: "DEL" },
        addRoletoGroupMember: { path: "/groups/{groupId}/members/{userId}/roles/{groupRoleId}", method: "PUT" },
        removeRolefromGroupMember: { path: "/groups/{groupId}/members/{userId}/roles/{groupRoleId}", method: "DEL" },
        listGroupPermissions: { path: "/groups/{groupId}/permissions", method: "GET" },
        getGroupJoinRequests: { path: "/groups/{groupId}/requests", method: "GET" },
        cancelGroupJoinRequest: { path: "/groups/{groupId}/requests", method: "DEL" },
        respondGroupJoinrequest: { path: "/groups/{groupId}/requests/{userId}", method: "PUT" },
        getGroupRoles: { path: "/groups/{groupId}/roles", method: "GET" },
        createGroupRole: { path: "/groups/{groupId}/roles", method: "POST" },
        updateGroupRole: { path: "/groups/{groupId}/roles/{groupRoleId}", method: "PUT" },
        deleteGroupRole: { path: "/groups/{groupId}/roles/{groupRoleId}", method: "DEL" },
    },
    invite: {
        inviteUser: { path: "/invite/{userId}", method: "POST" },
        inviteMyselfToInstance: { path: "/invite/myself/to/{worldId}:{instanceId}", method: "POST" },
        requestInvite: { path: "/requestInvite/{userId}", method: "POST" },
        respondInvite: { path: "/invite/{notificationId}/response", method: "POST" },
        listInviteMessages: { path: "/message/{userId}/{messageType}", method: "GET" },
        getInviteMessage: { path: "/message/{userId}/{messageType}/{slot}", method: "GET" },
        updateInviteMessage: { path: "/message/{userId}/{messageType}/{slot}", method: "PUT" },
        resetInviteMessage: { path: "/message/{userId}/{messageType}/{slot}", method: "DEL" },
    },
    instances: {
        getInstance: { path: "/instances/{worldId}:{instanceId}", method: "GET" },
        getInstanceShortName: { path: "/instances/{worldId}:{instanceId}/shortName", method: "GET" },
        sendSelfInvite: { path: "/instances/{worldId}:{instanceId}/invite", method: "POST" },
        getInstanceByShortName: { path: "/instances/s/{shortName}", method: "GET" },
    },

    notifications: {
        listNotifications: { path: "/auth/user/notifications", method: "GET" },
        acceptFriendRequest: { path: "/auth/user/notifications/{notificationId}/accept", method: "PUT" },
        markNotificationAsRead: { path: "/auth/user/notifications/{notificationId}/see", method: "PUT" },
        deleteNotification: { path: "/auth/user/notifications/{notificationId}/hide", method: "PUT" },
        clearAllNotifications: { path: "/auth/user/notifications/clear", method: "PUT" },
    },

    perms: {
        getAssignedPermissions: { path: "/auth/permissions", method: "GET" },
        getPermission: { path: "/permissions/{permissionId}", method: "GET" },
    },

    Playermods: {
        searchPlayerModerations: { path: "/auth/user/playermoderations", method: "GET" },
        moderateUser: { path: "/auth/user/playermoderations", method: "POST" },
        clearAllPlayerModerations: { path: "/auth/user/playermoderations", method: "DEL" },
        getPlayerModeration: { path: "/auth/user/playermoderations/{playerModerationId}", method: "GET" },
        deletePlayerModeration: { path: "/auth/user/playermoderations/{playerModerationId}", method: "DEL" },
        unmoderateUser: { path: "/auth/user/unplayermoderate", method: "PUT" },
    },

    system: {
        fetchAPIConfig: { path: "/config", method: "GET" },
        showInformationNotices: { path: "/infoPush", method: "GET" },
        downloadCSS: { path: "/css/app.css", method: "GET" },
        downloadJavaScript: { path: "/js/app.js", method: "GET" },
        checkAPIHealth: { path: "/health", method: "GET" },
        currentOnlineUsers: { path: "/visits", method: "GET" },
        currentSystemTime: { path: "/time", method: "GET" },
    },

    users: {
        searchAllUsers: { path: "/users", method: "GET" },
        getUserbyUsername: { path: "/users/{username}/name", method: "GET" },
        getUserbyID: { path: "/users/{userId}", method: "GET" },
        updateUserInfo: { path: "/users/{userId}", method: "PUT" },
        getUserGroups: { path: "/users/{userId}/groups", method: "GET" },
        getUserGroupRequests: { path: "/users/{userId}/groups/requested", method: "GET" },
    },

    worlds: {
        searchAllWorlds: { path: "/worlds", method: "GET" },
        createWorld: { path: "/worlds", method: "POST" },
        listActiveWorlds: { path: "/worlds/active", method: "GET" },
        listFavoritedWorlds: { path: "/worlds/favorites", method: "GET" },
        listRecentWorlds: { path: "/worlds/recent", method: "GET" },
        getWorldbyID: { path: "/worlds/{worldId}", method: "GET" },
        updateWorld: { path: "/worlds/{worldId}", method: "PUT" },
        deleteWorld: { path: "/worlds/{worldId}", method: "DEL" },
        getWorldMetadata: { path: "/worlds/{worldId}/metadata", method: "GET" },
        getWorldPublishStatus: { path: "/worlds/{worldId}/publish", method: "GET" },
        publishWorld: { path: "/worlds/{worldId}/publish", method: "PUT" },
        unpublishWorld: { path: "/worlds/{worldId}/publish", method: "DEL" },
        getWorldInstance: { path: "/worlds/{worldId}/{instanceId}", method: "GET" }
    }
}